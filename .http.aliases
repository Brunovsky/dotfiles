# curl things
# ===========

hr() {
	local BACKEND="$1"
	local file="$DOMAIN_ALIASES_FILE"

    if test -z "$file"; then
        echo 'Error: $DOMAIN_ALIASES_FILE is empty.'
        return 1
    fi

	if ! test -f "$file"; then
		echo "Error: Please create $file."
		echo 'Syntax: "#" for comments, one alias/line with 0 or more options:'
		echo '  $alias $domain $http-options'
		echo 'Usage (afterwards): hr $ALIAS'
		return 1
	fi

	declare -a ROWS NAMES DOMAINS OPTIONS
	mapfile -t ROWS    < <(awk '!/^\s*#|^\s*$/ {print $0}' "$file")
	mapfile -t NAMES   < <(awk '!/^\s*#|^\s*$/ {print $1}' "$file")
	mapfile -t DOMAINS < <(awk '!/^\s*#|^\s*$/ {print $2}' "$file")
	mapfile -t OPTIONS < <(awk '!/^\s*#|^\s*$/ {$1=$2=""; print $0}' "$file")

	# handle 'hr --help'
	if test "$BACKEND" == "--help"; then
		echo 'Usage: hr $ALIAS'
		echo 'Here is your list of backends:'
		for i in "${!ROWS[@]}"; do
			echo "${ROWS[$i]}"
		done
		return 0
	fi

	# handle 'hr', respond with current domain
	if test -z "$BACKEND"; then
		if test -z "$AHTTP_DOMAIN"; then
			echo 'No domain is set.'
			return 1
		fi
		for i in "${!DOMAINS[@]}"; do
			if test "$AHTTP_DOMAIN" == "${DOMAINS[$i]}"; then
				echo "${ROWS[$i]}"
				return 0
			fi
		done
		echo 'Unknown'
		return 0
	fi

	# handle 'hr $BACKEND', switch current domain
	for i in "${!NAMES[@]}"; do
		if test "$BACKEND" == "${NAMES[$i]}"; then
			export AHTTP_DOMAIN="${DOMAINS[$i]}"
			export AHTTP_OPTIONS="${OPTIONS[$i]}"
			echo "${ROWS[$i]}"
			return 0
		fi
	done

	echo "Error: Didn't find that backend :(  Here's a list:"
	for i in "${!ROWS[@]}"; do
		echo "${ROWS[$i]}"
	done
	return 1
}

_hr() {
	if test "$COMP_CWORD" -eq 1; then
		local cur=${COMP_WORDS[COMP_CWORD]}
		local names
		names=$(awk '!/^\s*#|^\s*$/ {print $1}' "$DOMAIN_ALIASES_FILE")
		mapfile -t COMPREPLY < <(compgen -W "--help $names" -- "$cur")
	else
		COMPREPLY=()
	fi
}

complete -F _hr hr

# httpie things
# =============

short-http() {
	METHOD="$1" ; ENDP="" ; shift 1
	if test $# -ne 0; then
		ENDP="$2" ; shift 2
	fi
	# shellcheck disable=SC2086
	http "$METHOD" $AHTTP_OPTIONS "$AHTTP_DOMAIN$ENDP" "$@"
}

GET() { short-http GET "$@" ; }
HEAD() { short-http HEAD "$@" ; }
POST() { short-http POST "$@" ; }
PATCH() { short-http PATCH "$@" ; }
PUT() { short-http PUT "$@" ; }
DELETE() { short-http DELETE "$@" ; }
OPTIONS() { short-http OPTIONS "$@" ; }
