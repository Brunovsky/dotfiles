# --- ideas
# https://github.com/LukeSmithxyz/voidrice/blob/master/.config/aliasrc
# https://github.com/mathiasbynens/dotfiles/blob/master/.aliases
# https://github.com/miguelpduarte/dotfiles

# general ls aliases
# ==================
# ls=short, ll=long
# v=not dotfiles, .=dotfiles | f=files, d=dirs, l=link, s=socket

alias lla="\ls --si --color=auto -bF --group-directories-first -lvA"
alias lsa="\ls --si --color=auto -bF --group-directories-first -CvA"
alias llv="\ls --si --color=auto -bF --group-directories-first -lv"
alias lsv="\ls --si --color=auto -bF --group-directories-first -Cv"
alias ll.="\ls --si --color=auto -bF --group-directories-first -lvA --ignore='[!.]*'"
alias ls.="\ls --si --color=auto -bF --group-directories-first -CvA --ignore='[!.]*'"
alias ll=llv ls=lsv

# keep the ';' or bash will choke
llfa() { lla --color=always "$@" | grep -Eve "^d([r-][w-][xst-])+" ; }
llfv() { llv --color=always "$@" | grep -Eve "^d([r-][w-][xst-])+" ; }
llf.() { ll. --color=always "$@" | grep -Eve "^d([r-][w-][xst-])+" ; }
llda() { lla --color=always "$@" | grep -Eve "^[^d]([r-][w-][xst-])+" ; }
lldv() { llv --color=always "$@" | grep -Eve "^[^d]([r-][w-][xst-])+" ; }
lld.() { ll. --color=always "$@" | grep -Eve "^[^d]([r-][w-][xst-])+" ; }
llla() { lla --color=always "$@" | grep -Eve "^[^l]([r-][w-][xst-])+" ; }
lllv() { llv --color=always "$@" | grep -Eve "^[^l]([r-][w-][xst-])+" ; }
lll.() { ll. --color=always "$@" | grep -Eve "^[^l]([r-][w-][xst-])+" ; }
llsa() { lla --color=always "$@" | grep -Eve "^[^s]([r-][w-][xst-])+" ; }
llsv() { llv --color=always "$@" | grep -Eve "^[^s]([r-][w-][xst-])+" ; }
lls.() { ll. --color=always "$@" | grep -Eve "^[^s]([r-][w-][xst-])+" ; }
alias llf=llfv lld=lldv lll=lllv lls=llsv

# carefully copy, move, rename, remove and link files
# ===================================================

alias carecp='cp --interactive --verbose --preserve=links --no-dereference'
alias caremv='mv --interactive --verbose'
alias carerename='rename --no-overwrite --verbose'
alias carerm='rm --interactive --dir --verbose'
alias careln='ln --interactive --verbose'

# I can't seem to remember this
alias lnorder='echo -e "ln [option]... [-s] [-T] SINK SOURCE (SOURCE->SINK)\n
	-s for symbolic, -T to treat SINK as a normal file"'

alias mkdir='mkdir --parents --verbose'
alias rmdir='rmdir --verbose'

alias rsynccp='rsync -ae ssh -vh --progress'
alias rsynctransfer='rsync -ae ssh -vh --info=progress2 --no-inc-recursive'

mkcd() { mkdir "$1" && cd "$1" ; }
swap() {
	local TMPFILE="${TMPDIR:-/tmp}/swaptmp.$RANDOM.$RANDOM.$RANDOM.$RANDOM"
	mv "$1" "$TMPFILE" && mv "$2" "$1" && mv "$TMPFILE" "$2"
}

# move around
# ===========

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .1='cd ..'
alias .2='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# curl things
# ===========

function check_curl_domain {
	if test -z $CURL_DOMAIN
	then
		echo 'Error: $CURL_DOMAIN is empty, please specify the host'
		echo 'you would like to send requests to:'
		echo '	$ export CURL_DOMAIN=http://www.example.com'
		echo
		return 1
	fi
}

function curl_display {
	TMPFILE=$(mktemp "${TMPDIR:-/tmp}/curl-display.XXXXXXXXXX")
	curl "$@" > "$TMPFILE"
	CHAR=$(head -n1 "$TMPFILE" | cut -c1)
	if test $CHAR == '{'
	then
		cat "$TMPFILE" | jq
	elif test $CHAR == '<'
	then
		cat "$TMPFILE" # pending a good program...
	else
		cat "$TMPFILE"
	fi
	rm "$TMPFILE"
}

function GET {
	check_curl_domain || return 1
	ENDP="$1" && shift
	curl_display -s -X GET "$CURL_DOMAIN$ENDP" "$@"
}

function DELETE {
	check_curl_domain || return 1
	ENDP="$1" && shift
	curl_display -s -X DELETE "$CURL_DOMAIN$ENDP" "$@"
}

function POST {
	check_curl_domain || return 1
	ENDP="$1" && shift
	if test "$#" -eq 0
	then
		echo 'Error: Missing payload (request body, second argument)'
		return 1
	fi
	# guess json or querystring
	if [[ ${1::1} == '{' ]]
	then
		curl_display -s -X POST --header 'Content-Type: application/json' \
			"$CURL_DOMAIN$ENDP" --data "$@"
	else
		curl_display -s -X POST \
			"$CURL_DOMAIN$ENDP" --data "$@"
	fi
}

# simple functions
# ================

alias df='df --si'
alias du='du --si -cs'
alias tree='tree -Fv --dirsfirst'
alias bc='bc --interactive --mathlib --quiet'
alias ffmpeg='ffmpeg -hide_banner'

# split a path aggregator
alias splitcolon='tr -s ":" "\n"'
alias path='echo $PATH | splitcolon'

# invoke valgrind to debug memory leaks
alias memcheck='valgrind --leak-check=full --show-leak-kinds=all'

# variations of grep
alias egrep='grep -E'
alias igrep='grep -iE'
alias sgrep='grep -HnE'
alias sigrep='grep -HniE'

# dotfiles
alias .git='git --git-dir=$HOME/.dotfiles --work-tree=$HOME'

# pretty print json
alias prettyjson='python -m json.tool'

# copy to clipboard
alias clipclip='xclip -selection clipboard'

# grep man pages
alias mangrep='man -KI --regex'
alias manigrep='man -Ki --regex'

source ~/.local.aliases
